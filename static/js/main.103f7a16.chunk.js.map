{"version":3,"sources":["Components/Cart/CartOrderForm.module.css","Components/Cart/Cart.module.css","Components/Cart/CartItem.module.css","Components/Layout/HeaderCartButton.module.css","Components/UI/Modal.module.css","Components/Meals/MealItems/MealItem.module.css","Components/Meals/AvailableMeals.module.css","Components/Layout/Header.module.css","Components/UI/Card.module.css","Components/UI/Input.module.css","Components/Meals/MealItems/MealItemForm.module.css","Components/Meals/MealsSummary.module.css","Components/Context/CartContext.js","Components/UI/Modal.js","Components/UI/Card.js","Components/UI/Input.js","Components/Meals/MealItems/MealItemForm.js","Components/Meals/MealItems/MealItem.js","Components/Cart/CartItem.js","Components/Cart/CartOrderForm.js","Components/Cart/Cart.js","assests/food.jpg","Components/Cart/CartIcon.js","Components/Layout/HeaderCartButton.js","Components/Layout/Header.js","Components/Meals/AvailableMeals.js","Components/Meals/MealsSummary.js","Components/Meals/Meals.js","Components/Context/CartProvider.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","CartContext","React","createContext","items","amount","addItem","item","removeItem","id","BackDrop","props","className","classes","backdrop","onClick","onHideCart","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDom","createPortal","Card","card","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountInputRef","useRef","useState","isAmountValid","setIsAmountValid","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","type","min","max","step","defaultValue","MealItem","cartCtx","useContext","pricechanged","price","toFixed","meal","name","description","CartItem","summary","actions","onRemove","onAdd","CartOrderForm","nameRef","streetRef","postalRef","cityRef","street","postal","city","formInputValidity","setFormInputValidity","isEmpty","nameClasses","control","invalid","streetClasses","postalClasses","cityClasses","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","onConfirm","OnCancel","Cart","issubmitted","setIsSubmitted","didSubmit","setDidSubmit","isCheckout","setIsCheckout","totalAmount","addToCartHandler","removeFromCartHandler","isItemsInCart","cartItems","map","bind","confirmOrderHandler","userdata","a","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartModal","Fragment","total","button","didSubmitModalContent","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","numberOfCartItems","reduce","curNumber","btnIsHighlighted","setBtnIsHighlighted","btnClasses","bump","useEffect","timer","setTimeout","clearTimeout","icon","badge","Header","header","onShowCart","src","imageItem","alt","AvailableMeals","mealList","setMealsList","isLoading","setIsLoading","htmlError","setHtmlError","FetchMeals","response","console","log","json","responseData","ok","Error","key","mealsData","push","catch","error","message","loading","errorText","meals","MealsSummary","Meals","defaultCartState","cartReducer","state","action","updatedItems","updatedTotalAmount","existingItemIndex","findIndex","existingItem","updatedItem","concat","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","isCartShown","setIsCartShown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.103f7a16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CartOrderForm_form__2fcHE\",\"control\":\"CartOrderForm_control__1_dmy\",\"actions\":\"CartOrderForm_actions__-qkYp\",\"submit\":\"CartOrderForm_submit__21MGc\",\"invalid\":\"CartOrderForm_invalid__Myybr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__njd5J\",\"total\":\"Cart_total__y5w8E\",\"actions\":\"Cart_actions__UOEcn\",\"button--alt\":\"Cart_button--alt__y-oa4\",\"button\":\"Cart_button__7JJuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__2ny9b\",\"summary\":\"CartItem_summary__2ux5U\",\"price\":\"CartItem_price__3jLAO\",\"amount\":\"CartItem_amount__38HWv\",\"actions\":\"CartItem_actions__1bxhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3sGid\",\"icon\":\"HeaderCartButton_icon__2Xtim\",\"badge\":\"HeaderCartButton_badge__m0u5r\",\"bump\":\"HeaderCartButton_bump__1NYW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__oVgwi\",\"modal\":\"Modal_modal__mOVq9\",\"slide-down\":\"Modal_slide-down__3gotB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__oiSa4\",\"description\":\"MealItem_description__2nW2v\",\"price\":\"MealItem_price__38oej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__jd1Ti\",\"meals-appear\":\"AvailableMeals_meals-appear__2SZB9\",\"loading\":\"AvailableMeals_loading__1msE6\",\"errorText\":\"AvailableMeals_errorText__37Z2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Av_H\",\"main-image\":\"Header_main-image__3GV1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3TkHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__ACAj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__1BMUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__1kHZ5\"};","import React from \"react\";\r\n\r\nconst CartContext = React.createContext({\r\n    items : [],\r\n    amount : 0,\r\n    addItem : (item) => {},\r\n    removeItem : (id) => {}\r\n})\r\n\r\nexport default CartContext;","import { Fragment } from \"react\"\r\nimport ReactDom from \"react-dom\"\r\n\r\nimport classes from \"./Modal.module.css\"\r\n\r\nconst BackDrop = (props) => {\r\n    return <div className={classes.backdrop} onClick={props.onHideCart}/>\r\n}\r\n\r\nconst ModalOverlay = (props) => {\r\n    return(\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{props.children}</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst portalElement = document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n    return(\r\n        <Fragment>\r\n            {ReactDom.createPortal(<BackDrop onHideCart={props.onHideCart}/> , portalElement)}\r\n            {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>,portalElement)}\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Modal;","import classes from \"./Card.module.css\"\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className={classes.card}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport classes from \"./Input.module.css\"\r\n\r\nconst Input = React.forwardRef((props,ref) => {\r\n\r\n    return (\r\n        <div className={classes.input}>\r\n            <label htmlFor={props.input.id}>{props.label}</label>\r\n            <input ref = {ref} {...props.input}></input>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Input;","import { useRef , useState } from \"react\";\r\nimport Input from \"../../UI/Input\";\r\nimport MealItem from \"./MealItem\"\r\nimport classes from \"./MealItemForm.module.css\"\r\n\r\nconst MealItemForm = (props) => {\r\n\r\n    const amountInputRef = useRef();\r\n    const [isAmountValid , setIsAmountValid] = useState(true)\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredAmount = amountInputRef.current.value\r\n        const enteredAmountNumber = +enteredAmount\r\n\r\n        if(enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5){\r\n            setIsAmountValid(false)\r\n            return;\r\n        }\r\n        props.onAddToCart(enteredAmountNumber)\r\n    }\r\n    return(\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n            <Input \r\n                ref = {amountInputRef}\r\n                label=\"Amount\"\r\n                input = {{\r\n                    id : \"amount\" + props.id ,\r\n                    type : \"number\",\r\n                    min : \"1\" ,\r\n                    max : \"5\",\r\n                    step : \"1\",\r\n                    defaultValue : \"1\"\r\n                }}\r\n            />\r\n            <button>+ Add</button>\r\n            {!isAmountValid && <p>Please enter valid Amount (1-5)</p>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MealItemForm;","import Card from \"../../UI/Card\"\r\nimport classes from \"./MealItem.module.css\"\r\nimport MealItemForm from \"./MealItemForm\"\r\nimport { useContext } from \"react\"\r\nimport CartContext from \"../../Context/CartContext\"\r\n\r\nconst MealItem = (props) => {\r\n\r\n    const cartCtx = useContext(CartContext)\r\n\r\n    const addToCartHandler = (amount) => {\r\n        cartCtx.addItem({\r\n            id : props.id,\r\n            name : props.name,\r\n            amount : amount,\r\n            price : props.price\r\n        })\r\n    }\r\n\r\n    const pricechanged = `$${props.price.toFixed(2)}`\r\n\r\n    return(\r\n        <li className={classes.meal}>\r\n            <div>\r\n                <h3>{props.name}</h3>\r\n                <div className={classes.description}>\r\n                    <p>{props.description}</p>\r\n                </div>\r\n                <div className={classes.price}>${pricechanged}</div>\r\n            </div>\r\n            <div><MealItemForm onAddToCart = {addToCartHandler}/></div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MealItem;","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import React , {useRef , useState} from \"react\";\r\nimport classes from \"./CartOrderForm.module.css\"\r\n\r\nconst CartOrderForm = (props) => {\r\n\r\n    const [issubmitted , setIsSubmitted] = useState(false)\r\n    const [didSubmit , setDidSubmit] = useState(false)\r\n    const nameRef = useRef()\r\n    const streetRef = useRef()\r\n    const postalRef = useRef()\r\n    const cityRef = useRef()\r\n\r\n    const [formInputValidity , setFormInputValidity] = useState({\r\n        name : true,\r\n        street : true,\r\n        postal : true,\r\n        city : true\r\n    })\r\n\r\n    const isEmpty = value => value.trim() ===\"\";\r\n    const isFivestar = value => value.length!==5\r\n\r\n\r\n    const submitHandler = (event)  => {\r\n        event.preventDefault()\r\n\r\n        const enteredName = nameRef.current.value\r\n        const enteredStreet = streetRef.current.value\r\n        const enteredPostalCode = postalRef.current.value\r\n        const enteredCity = cityRef.current.value\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredPostalIsValid = !isFivestar(enteredPostalCode)\r\n        const enteredCityIsValid = !isEmpty(enteredCity)\r\n\r\n        setFormInputValidity({\r\n            name : enteredNameIsValid,\r\n            street : enteredStreetIsValid,\r\n            postal : enteredPostalIsValid,\r\n            city : enteredCityIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid\r\n\r\n        if(!formIsValid){\r\n            return;\r\n        }\r\n\r\n        props.onConfirm({\r\n            name : enteredName,\r\n            street : enteredStreet,\r\n            postal : enteredPostalCode,\r\n            city : enteredCity\r\n        })\r\n        \r\n    }\r\n\r\n    const nameClasses = `${classes.control} ${formInputValidity.name ? \"\" : classes.invalid}`\r\n    const streetClasses = `${classes.control} ${formInputValidity.street ? \"\" : classes.invalid}`\r\n    const postalClasses = `${classes.control} ${formInputValidity.postal ? \"\" : classes.invalid}`\r\n    const cityClasses = `${classes.control} ${formInputValidity.city ? \"\" : classes.invalid}`\r\n\r\n  \r\n    return(\r\n        <form onSubmit={submitHandler} className={classes.form}>\r\n            <div className={nameClasses}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" id=\"name\" ref={nameRef}/>\r\n                {!formInputValidity.name && <p>Enter valid name</p> }\r\n            </div>\r\n            <div className={streetClasses}>\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input type=\"text\" id=\"street\"ref={streetRef}/>\r\n                {!formInputValidity.street && <p>Enter valid street</p> }\r\n            </div>\r\n            <div className={postalClasses}>\r\n                <label htmlFor=\"postal\">Postal Address</label>\r\n                <input type=\"text\" id=\"postal\" ref={postalRef}/>\r\n                {!formInputValidity.postal && <p>Enter valid PostalCode</p> }\r\n            </div>\r\n            <div className={cityClasses}>\r\n                <label htmlFor=\"city\">City</label>\r\n                <input type=\"text\" id=\"city\" ref={cityRef}/>\r\n                {!formInputValidity.city && <p>Enter valid city</p> }\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button onClick={props.OnCancel} type=\"button\">Cancel</button>\r\n                <button type=\"submit\">Confirm</button>\r\n            </div>\r\n                \r\n            \r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default CartOrderForm;","import React, { createContext, useContext, useState } from \"react\";\r\nimport CartContext from \"../Context/CartContext\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\"\r\nimport MealItem from \"../Meals/MealItems/MealItem\";\r\nimport CartItem from \"./CartItem\"\r\nimport CartOrderForm from \"./CartOrderForm\";\r\n\r\nconst Cart = (props) => {\r\n    \r\n    const [issubmitted , setIsSubmitted] = useState(false)\r\n    const [didSubmit , setDidSubmit] = useState(false)\r\n    const [isCheckout , setIsCheckout] = useState(false)\r\n    const cartCtx = useContext(CartContext)\r\n\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`\r\n\r\n    const addToCartHandler = (item) => {\r\n        cartCtx.addItem({...item , amount : 1})\r\n    }\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        cartCtx.removeItem(id)\r\n    }\r\n\r\n    const isItemsInCart = cartCtx.items.length > 0\r\n\r\n    const cartItems = \r\n        <ul>\r\n            {cartCtx.items.map((item) => \r\n                <CartItem\r\n                id = {item.id}\r\n                key = {item.id}\r\n                name = {item.name}\r\n                price = {item.price}\r\n                amount = {item.amount}\r\n                onRemove = {removeFromCartHandler.bind(null,item.id)}\r\n                onAdd = {addToCartHandler.bind(null,item)}\r\n            />     \r\n            )}\r\n        </ul>\r\n\r\n        const checkOutHandler = () => {\r\n            setIsCheckout(true)\r\n        }\r\n\r\n        const confirmOrderHandler = async (userdata) => {\r\n            setIsSubmitted(true)\r\n            await fetch(\"https://foodapp-5f315-default-rtdb.firebaseio.com/meals.json\", {\r\n                method : \"POST\",\r\n                body : JSON.stringify({\r\n                    user : userdata,\r\n                    orderedItems : cartCtx.items\r\n                })\r\n            })\r\n\r\n            setIsSubmitted(false)\r\n            setDidSubmit(true)\r\n            cartCtx.clearCart()\r\n        }\r\n\r\n        const cartModal =(\r\n            <React.Fragment>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {isCheckout && <CartOrderForm onConfirm = {confirmOrderHandler} OnCancel = {props.onHideCart}/>}\r\n            {!isCheckout && <div className={classes.actions}>\r\n                <button className={classes[\"button--alt\"]} onClick = {props.onHideCart}>Close</button>\r\n                {isItemsInCart && <button className={classes.button} onClick={checkOutHandler}>Order</button>}\r\n            </div>}\r\n            </React.Fragment>\r\n        )\r\n\r\n        const didSubmitModalContent = (\r\n            <React.Fragment>\r\n              <p>Successfully sent the order!</p>\r\n              <div className={classes.actions}>\r\n              <button className={classes.button} onClick={props.onHideCart}>\r\n                Close\r\n              </button>\r\n            </div>\r\n            </React.Fragment>\r\n          );\r\n\r\n    return(\r\n        <Modal onHideCart={props.onHideCart}>\r\n            {!issubmitted && !didSubmit && cartModal}\r\n            {issubmitted && <p>Data is Submitting........</p>}\r\n            {!issubmitted && didSubmit && didSubmitModalContent}\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default Cart;","export default __webpack_public_path__ + \"static/media/food.2971f633.jpg\";","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import React , {useContext ,useEffect , useState} from \"react\"\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport classes from \"./HeaderCartButton.module.css\"\r\nimport CartContext from \"../Context/CartContext\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const cartCtx = useContext(CartContext)\r\n    const numberOfCartItems = cartCtx.items.reduce((curNumber , item) => {\r\n        return curNumber + item.amount\r\n    },0)\r\n\r\n    const {items} = cartCtx\r\n    const [btnIsHighlighted , setBtnIsHighlighted] = useState(false)\r\n    const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : \"\"}`\r\n    \r\n    useEffect(() => {\r\n        if(items.length === 0){\r\n            return;\r\n        }\r\n        setBtnIsHighlighted(true)\r\n        \r\n        const timer = setTimeout(() => {\r\n            setBtnIsHighlighted(false)\r\n        } , 300)\r\n\r\n      return () => {\r\n          clearTimeout(timer)\r\n      }\r\n\r\n    },[items])\r\n\r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon/>\r\n            </span>\r\n            <span>Your Cart</span>\r\n            <span className={classes.badge}>{numberOfCartItems}</span>\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default HeaderCartButton;","import React , {Fragment} from \"react\";\r\nimport imageItem from \"../../assests/food.jpg\"\r\nimport classes from \"./Header.module.css\"\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <header className={classes.header}>\r\n              <h1>Desi Food App</h1>\r\n              <HeaderCartButton onClick={props.onShowCart} />\r\n            </header>\r\n            \r\n            <div className={classes[\"main-image\"]}>\r\n                <img src={imageItem} alt=\"Image with delicious Food\"/>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\"\r\nimport MealItem from \"./MealItems/MealItem\";\r\n\r\nconst AvailableMeals = (props) => {\r\n\r\n  const [mealList , setMealsList] =useState([])\r\n  const [isLoading , setIsLoading] = useState(true)\r\n  const [htmlError , setHtmlError] =useState()\r\n\r\n  useEffect(()=> {\r\n    \r\n    const FetchMeals = async () => {\r\n      const response = await fetch(\"https://foodapp-new-default-rtdb.firebaseio.com//meals.json\");\r\n      console.log(response)\r\n      const responseData = await response.json()\r\n      console.log(responseData)\r\n\r\n      if(!response.ok){\r\n        throw new Error(\"Something went wrong\")\r\n      }\r\n\r\n      let mealsData = []\r\n\r\n      for (let  key in responseData){\r\n\r\n        mealsData.push({\r\n          id : key,\r\n          name : responseData[key].name,\r\n          description : responseData[key].description,\r\n          price : responseData[key].price\r\n        })\r\n      }\r\n\r\n      setMealsList(mealsData)\r\n      setIsLoading(false)\r\n    }\r\n    \r\n\r\n    FetchMeals().catch((error) => {\r\n      setIsLoading(false)\r\n      setHtmlError(error.message)\r\n    }\r\n    )\r\n  }, [])\r\n\r\n  if(isLoading){\r\n    return(\r\n      <section>\r\n         <p className={classes.loading}>Loading.......</p>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  if(htmlError){\r\n    return(<section className={classes.errorText}>\r\n      <p>{htmlError}</p>\r\n    </section>)\r\n  }\r\n\r\n    return(\r\n        <section className={classes.meals}>\r\n            <Card>\r\n        <ul>\r\n            {mealList.map((meal) => \r\n            <MealItem\r\n                id = {meal.id}\r\n                key = {meal.id}\r\n                name = {meal.name}\r\n                description = {meal.description}\r\n                price = {meal.price}\r\n            /> )}\r\n        </ul>\r\n        </Card>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default AvailableMeals;","import classes from './MealsSummary.module.css';\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;","import { Fragment } from \"react\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\nimport MealsSummary from \"./MealsSummary\";\r\n\r\nconst Meals = () => {\r\n\r\n    return(\r\n        <Fragment>\r\n            <MealsSummary/>\r\n            <AvailableMeals/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Meals;","import { useReducer } from 'react';\r\n\r\nimport CartContext from \"./CartContext\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    \r\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id)\r\n    const existingItem = state.items[existingItemIndex]\r\n    let updatedItems\r\n\r\n    if(existingItem){\r\n        const updatedItem = {\r\n            ...existingItem,\r\n            amount : existingItem.amount + action.item.amount\r\n        }\r\n\r\n        updatedItems = [...state.items]\r\n        updatedItems[existingItemIndex]=updatedItem\r\n    }\r\n\r\n    else{\r\n        updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n\r\n  if(action.type === \"REMOVE\"){\r\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id)\r\n    const existingItem = state.items[existingItemIndex]\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price\r\n\r\n    let updatedItems\r\n\r\n    if(existingItem.amount === 1){\r\n        updatedItems = state.items.filter(item => item.id !== action.id)\r\n    }\r\n    else{\r\n        const updatedItem = {...existingItem , amount : existingItem.amount - 1}\r\n        updatedItems = [...state.items]\r\n        updatedItems[existingItemIndex]=updatedItem\r\n    }\r\n\r\n    return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount\r\n      };\r\n  }\r\n\r\n  if (action.type === 'CLEAR'){\r\n    return defaultCartState\r\n  }\r\n\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE', id: id});\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({type: 'CLEAR'});\r\n  };\r\n\r\n\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart : clearCartHandler\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;","import React , {Fragment , useState} from \"react\";\nimport Cart from \"./Components/Cart/Cart\";\nimport Header from \"./Components/Layout/Header\";\nimport Meals from \"./Components/Meals/Meals\";\nimport CartProvider from \"./Components/Context/CartProvider\"\n\nconst App = () => {\n\n  const [isCartShown , setIsCartShown] = useState(false)\n\n  const showCartHandler = () => {\n    setIsCartShown(true)\n  }\n\n  const hideCartHandler = () => {\n    setIsCartShown(false)\n  }\n\n  return(\n    <CartProvider>\n      <Header onShowCart={showCartHandler}/>\n      {isCartShown && <Cart onHideCart = {hideCartHandler}/>}\n      <main>\n        <Meals/>\n      </main>\n      \n    </CartProvider>\n  )\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}